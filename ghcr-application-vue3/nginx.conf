# /ghcr-application-vue3/nginx.conf

# --- HTTP (80端口) 配置 ---
# 这个 server 块现在主要负责两件事：
# 1. 响应 Let's Encrypt 的验证请求。
# 2. 将所有其他普通访客重定向到 HTTPS。
server {
    listen 80;
    server_name ghcr.yaolm.top; # <-- 替换为您的域名

    # 1. 配置 Let's Encrypt 验证路径
    # 当 Let's Encrypt 访问 http://your-domain.com/.well-known/acme-challenge/ 时
    # Nginx 会从 /var/www/certbot 目录提供 Certbot 放置的验证文件。
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 2. 将所有其他 HTTP 请求重定向到 HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# --- HTTPS (443端口) 配置 ---
# 这是您的主服务配置块
server {
    listen 443 ssl;
    server_name ghcr.yaolm.top; # <-- 替换为您的域名

    # --- SSL 证书配置 ---
    # 证书和私钥的路径，指向我们与 Certbot 共享的目录
    ssl_certificate /etc/letsencrypt/live/ghcr.yaolm.top/fullchain.pem; # <-- 替换为您的域名
    ssl_certificate_key /etc/letsencrypt/live/ghcr.yaolm.top/privkey.pem; # <-- 替换为您的域名

    # （可选）引入推荐的 SSL 安全配置 如果第一次启动尚未申请ssl证书 一定要注释掉这个
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # 您的应用逻辑 (与之前相同)
    root /usr/share/nginx/html;
    index index.html;

    location /api/ {
        proxy_pass http://ghcr-application-fastify:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
}